{
  "displayName": "AIML",
  "fileTypes": ["aiml"],
  "name": "aiml",
  "patterns": [
    {
      "include": "#frontmatter"
    },
    {
      "include": "#aiml-import"
    },
    {
      "include": "#aiml-comments"
    },
    {
      "include": "#aiml-elements"
    },
    {
      "include": "#aiml-expressions"
    },
    {
      "include": "#plain-text"
    }
  ],
  "repository": {
    "aiml-import": {
      "patterns": [
        {
          "match": "^\\s*(import)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+(from)\\s+(['\"])([^'\"]+)(['\"])",
          "captures": {
            "1": { "name": "keyword.control.import.aiml" },
            "2": { "name": "variable.other.readwrite.alias.aiml" },
            "3": { "name": "keyword.control.from.aiml" },
            "4": { "name": "punctuation.definition.string.begin.aiml" },
            "5": { "name": "string.quoted.module.aiml" },
            "6": { "name": "punctuation.definition.string.end.aiml" }
          }
        }
      ]
    },
    "aiml-elements": {
      "patterns": [
        {
          "begin": "(<)(script)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(script)\\b(?=(?:[^>]*\\s)?lang\\s*=\\s*['\"]python['\"][^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(script)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.embedded.python",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        },
        {
          "begin": "(<)(script)\\b(?=(?:[^>]*\\s)?lang\\s*=\\s*['\"]javascript['\"][^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(script)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.embedded.javascript",
          "patterns": [
            {
              "include": "source.javascript"
            }
          ]
        },
        {
          "begin": "(<)(script)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(script)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.script.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.embedded.javascript",
          "patterns": [
            {
              "include": "source.javascript"
            }
          ]
        },
        {
          "begin": "(<)(workflow|scxml)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.workflow.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(state|parallel|final)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.state.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(llm|toolcall|prompt|instructions)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.ai.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(if|else|elseif|foreach|transition)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.control-flow.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(datamodel|data|assign)\\b",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.data.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)([a-zA-Z_][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.aiml" }
          },
          "end": "(/>)|>",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "patterns": [
            {
              "include": "#aiml-element-attributes"
            }
          ]
        },
        {
          "begin": "(<)(workflow|scxml)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.workflow.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.workflow.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(<)(state|parallel|final)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.state.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.state.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(<)(llm|toolcall|prompt|instructions)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.ai.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.ai.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(<)(if|else|elseif|foreach|transition)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.control-flow.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.control-flow.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(<)(datamodel|data|assign)\\b(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.data.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.data.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(<)([a-zA-Z_][a-zA-Z0-9_]*)(?:[^>]*)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "end": "(</)(\\2)(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.aiml" },
            "3": { "name": "punctuation.definition.tag.end.aiml" }
          },
          "contentName": "meta.tag.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        },
        {
          "begin": "(</)([a-zA-Z_][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.aiml" },
            "2": { "name": "entity.name.tag.aiml" }
          },
          "end": "(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.aiml" }
          }
        },
        {
          "begin": "(<>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.fragment.begin.aiml" }
          },
          "end": "(</\\>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.fragment.end.aiml" }
          },
          "contentName": "meta.tag.fragment.content.aiml",
          "patterns": [
            {
              "include": "#aiml-elements"
            },
            {
              "include": "#aiml-comments"
            },
            {
              "include": "#aiml-expressions"
            },
            {
              "include": "#plain-text"
            }
          ]
        }
      ]
    },
    "aiml-element-attributes": {
      "patterns": [
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(=)",
          "captures": {
            "1": { "name": "entity.other.attribute-name.aiml" },
            "2": { "name": "punctuation.separator.key-value.aiml" }
          }
        },
        {
          "include": "#aiml-expressions"
        },
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        }
      ]
    },
    "aiml-comments": {
      "patterns": [
        {
          "begin": "<!--",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.begin.aiml" }
          },
          "end": "-->",
          "endCaptures": {
            "0": { "name": "punctuation.definition.comment.end.aiml" }
          },
          "name": "comment.block.html.aiml"
        },
        {
          "begin": "{/\\*",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.begin.aiml" }
          },
          "end": "\\*/}",
          "endCaptures": {
            "0": { "name": "punctuation.definition.comment.end.aiml" }
          },
          "name": "comment.block.jsx.aiml"
        }
      ]
    },
    "aiml-expressions": {
      "begin": "{",
      "beginCaptures": {
        "0": { "name": "punctuation.section.embedded.begin.aiml" }
      },
      "end": "}",
      "endCaptures": {
        "0": { "name": "punctuation.section.embedded.end.aiml" }
      },
      "name": "meta.embedded.expression.aiml",
      "patterns": [
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        },
        {
          "include": "#aiml-expressions"
        },
        {
          "include": "source.javascript"
        }
      ]
    },
    "string-double-quoted": {
      "begin": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.aiml" }
      },
      "end": "\"",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.aiml" }
      },
      "name": "string.quoted.double.aiml",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.aiml"
        }
      ]
    },
    "string-single-quoted": {
      "begin": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.aiml" }
      },
      "end": "'",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.aiml" }
      },
      "name": "string.quoted.single.aiml",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.aiml"
        }
      ]
    },
    "frontmatter": {
      "patterns": [
        {
          "begin": "\\A-{3}$",
          "beginCaptures": {
            "0": { "name": "string.other.begin.yaml" }
          },
          "contentName": "meta.embedded.yaml",
          "end": "^-{3}$",
          "endCaptures": {
            "0": { "name": "string.other.end.yaml" }
          },
          "patterns": [
            {
              "include": "source.yaml"
            }
          ]
        }
      ]
    },
    "plain-text": {
      "match": "[^<{]+",
      "name": "text.plain.aiml"
    }
  },
  "scopeName": "source.aiml"
}
