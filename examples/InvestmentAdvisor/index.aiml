---
name: InvestmentAdvisor
inputSchema:
  type: object
  properties:
    investmentGoal:
      type: string
      description: The financial goal of the investment
    riskTolerance:
      type: string
      enum: ["low", "medium", "high"]
      description: The risk tolerance of the investor
    timeHorizon:
      type: integer
      description: Investment time horizon in years
    initialInvestment:
      type: number
      description: Initial investment amount in USD
root: true
---

import ProfileAssessment from "./states/ProfileAssessment.aiml"
import MarketAnalysis from "./states/MarketAnalysis.aiml"
import AssetAllocation from "./states/AssetAllocation.aiml"
import PortfolioRecommendation from "./states/PortfolioRecommendation.aiml"
import PresentRecommendation from "./states/PresentRecommendation.aiml"

{/* 
This AIML implements a financial investment advisor workflow that analyzes user inputs
about their investment goals, risk tolerance, time horizon, and initial investment amount.
It guides users through a step-by-step process from profile assessment to final recommendation,
using a structured approach to ensure comprehensive financial advice.

The workflow has been split into modular components where each state is defined in its own file
and imported as a custom element. This makes the workflow more maintainable and easier to update
individual steps without affecting the entire process.
*/}

<workflow initial="profileAssessment">
  <datamodel>
    <data id="investmentGoal" type="string">{ctx => ctx.workflowInput.investmentGoal}</data>
    <data id="riskTolerance" type="string">{ctx => ctx.workflowInput.riskTolerance}</data>
    <data id="timeHorizon" type="integer">{ctx => ctx.workflowInput.timeHorizon}</data>
    <data id="initialInvestment" type="number">{ctx => ctx.workflowInput.initialInvestment}</data>
    <data id="profile" type="json" value={{}} />
    <data id="assetAllocation" type="json" value={{}} schema={{
      type: "object",
      properties: {
        stocks: { type: "number" },
        bonds: { type: "number" },
        cash: { type: "number" }
      },
      required: ["stocks", "bonds", "cash"]
    }} />
    <data id="portfolioRecommendation" type="json" value={{}} schema={{
      type: "object",
      properties: {
        stocks: { type: "number" },
        bonds: { type: "number" },
        cash: { type: "number" }
      },
      required: ["stocks", "bonds", "cash"]
    }} />
    <data id="marketAnalysis" type="string" value={""} />
  </datamodel>

  <ProfileAssessment />
  <MarketAnalysis />
  <AssetAllocation />
  <PortfolioRecommendation />
  <PresentRecommendation />
</workflow>